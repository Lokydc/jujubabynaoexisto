const {
    MessageEmbed
} = require("discord.js");
const Discord = require("discord.js");
const Canvas = require('canvas')
const Command = require('../../structures/Command')
const bitcoin = require('discord-mongo-currency')


const Utils = require("../../util/Util.js")
//const Levels = require('discord-xp')
const User = require('../../database/Schemas/User')
//const config = require("../../botconfig/config.json");

const { registerFont } = require('canvas')
registerFont('helsinki.ttf', { family: 'helsinki' })
registerFont('IndieFlower-Regular.ttf', { family: 'indieFlower-Regular'}) //Segoe UI Black
registerFont('Segoe UI Black.ttf', { family: 'Segoe UI Black'})

module.exports = class extends Command {
    constructor(client) {
        super(client, {
            name: 'perfil',
            description: 'Veja seu perfil',
            options: [
            {
            type: 'USER',
            name: 'usuário',
            description: 'usuário no perfil',
            required: false
            }
            ]
        })
    }

    run = async (interaction) => {
        interaction.channel.sendTyping()
        const user = interaction.options.getUser('usuário') || interaction.user;
        let btc = await bitcoin.findUser(user.id, '968570313027780638')

        //Levels.setURL(config.mongodb);
        //Levels.createUser(user.id, interaction.guild.id);

        const lvl =  '2' 
        //await Levels.fetch(user.id, interaction.guild.id, true);

        const usac = await User.findOne({
            IdU: user.id
        });

        if(usac) {
          if(usac.blacklist.status === false) {
            try{
            const canvas = Canvas.createCanvas(1280, 720)
            const ctx = canvas.getContext("2d")
        
            let sobmim = usac.profile.sobremim || "Você pode personalizar com /sobremim [texto]"
                    
            let avatar = user.avatarURL({ dynamic: false, format: "png", size: 1024 });
                    
            let a = usac.profile.background
            if(!a) a = 'https://cdn.discordapp.com/attachments/967464112961499236/970923337733791794/unknown.png'
            let fundo = await 
            Canvas.loadImage(a)
            ctx.drawImage(fundo, 0, 0, canvas.width, canvas.height)
            
            const TargetAvatar = await Canvas.loadImage(`${avatar}`)
            ctx.drawImage(TargetAvatar, 23, 550, 150, 150)
    
            let layout = await 
            Canvas.loadImage("./src/images/profile_glow2.png")
            ctx.drawImage(layout, 0, 0, canvas.width, canvas.height)

            let corNick = '#F8F8F8'
            if(usac.Premium === 'on') {
              corNick = '#FC0303'
            } else {
              corNick = '#F8F8F8'
            }
                    
            ctx.textAlign = "left"
            ctx.font = '48px Segoe UI Black';
            ctx.fillStyle = corNick;
            await Utils.renderEmoji(ctx, shorten(user.username, 15), 200, 600);
            
            ctx.textAlign = "left"
            ctx.font = '48px Segoe UI Black';
            ctx.fillStyle = corNick;
            await Utils.renderEmoji(ctx, shorten(usac.reps, 4), 184, 77);
            
            ctx.textAlign = "left"
            ctx.font = '38px Segoe UI Black';
            ctx.fillStyle = '#FAA302';
            await Utils.renderEmoji(ctx, shorten(Utils.toAbbrev(btc.coinsInWallet), 15), 116, 172)
                    
            let list = [];
                    
            const flags = user.flags === null ? "" : user.flags.toArray()
            list.push(flags)
            
            let onwer = '947856944515936306'
                    
            if(user.id === onwer) {
                list.push("EARLY_VERIFIED_DEVELOPER")
            }

            if(usac.perm === true) {
              list.push("ADMIN")
            }

            if(usac.Premium === 'on') {
              list.push("VIP")
            }
            if(user.id === '316671069744267267') {
              list.push("GRATIAN")
            }
            if(user.id === '896226260726976523') {
              list.push("GRATIAN")
            }
    
            list = list.join("")
            .replace("EARLY_VERIFIED_DEVELOPER", '<:dev:874717224047374417>')
            .replace("HOUSE_BRAVERY", '<:HypeSquadBravery:878201508032827423>')
            .replace("HOUSE_BRILLIANCE", '<:HypeSquadBrilliance:879899227034120253>')
            .replace("HOUSE_BALANCE", '<:HypeSquadBalance:878201328101392394>')
            .replace("VERIFIED_BOT", '<:verified_bot:886776445106536448>' )
            .replace("ADMIN", '<:Javascript:883757487931670598>')
            .replace("TESTES", '<:TCC_IconBugHunterBadge:879901392779739216>')
            .replace("VIP", "<:vipd:904818002988531762>")
            .replace("GRATIAN", "<:gratian:962487783518273536>")
            
            ctx.font = `45px "helsinki"`;
            await Utils.renderEmoji(ctx, list.split(",").join(" "), 200, 675);
            
            ctx.font = `25px "indieFlower-Regular"`;
            ctx.fillStyle = '#F8F8F8';
            ctx.fillText(shorten(sobmim, 70), 610, 600)
    
            /*ctx.font = `60px Segoe UI Black`;
            ctx.fillStyle = '#F8F8F8';
            ctx.fillText(lvl.position, 585, 570)
    
            ctx.font = `60px Segoe UI Black`;
            ctx.fillStyle = '#F8F8F8';
            ctx.fillText(shorten(`${lvl.xp}/${Levels.xpFor(lvl.level + 1)}`, 11), 80, 570)*/

            
            const attachment = new Discord.MessageAttachment(canvas.toBuffer(), `profile_${user.id}_.png`)
            return interaction.reply({ content: ` `, files: [attachment]})
            } catch (err) {
            return interaction.reply({ content: `Não consegui montar o perfil do usuário.`, ephemeral: true})
            }
            } else {
              return interaction.reply({ content: `Este membro está banido!\nMotivo: \`${usac.Infoban}\``, ephemeral: true})
            }
        } else {
          interaction.reply({ content: 'Este usuário não está registrado em minha database!\nEle precisa usar um comando para registrar na database.', ephemeral: true})
        }

        //interaction.reply({ content: 'este comando esta em desenvolvimento.', ephemeral: true})
    }
    }

function shorten(text, len) {
    if (typeof text !== "string") return "";
    if (text.length <= len) return text;
    return text.substr(0, len).trim() + "...";
  }